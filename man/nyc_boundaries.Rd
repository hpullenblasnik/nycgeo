% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nyc_boundaries.R
\name{nyc_boundaries}
\alias{nyc_boundaries}
\title{Get NYC administrative boundaries and census data}
\usage{
nyc_boundaries(geography = c("borough", "puma", "nta", "cd", "tract",
  "block", "school", "police", "council", "cong"), filter_by = NULL,
  region = NULL, add_acs_data = FALSE, resolution = c("low", "high"))
}
\arguments{
\item{geography}{The requested administrative boundaries. Possible values are
"borough", "puma", "cd", "nta", "tract", or "block".}

\item{filter_by}{The geography to filter by. If \code{NULL}, all boundaries of
selected geography are returned.}

\item{region}{A character vector of regions to filter by. Selected
regions much match the geography indicated by \code{filter_by} argument.}

\item{add_acs_data}{If \code{TRUE}, selected demographic, social, and economic
data from the U.S. Census Bureau American Community Survey is appended to
boundaries.}

\item{resolution}{The resolution of the map. Defaults to lower resolution.}
}
\value{
An \code{sf} object of administrative boundaries
}
\description{
Get current boundaries for administrative boundaries in New York
City in the simple features {sf} format. Available boundaries are boroughs,
public use microdata areas (PUMAs), community districts (CDs), neighborhood
tabulation areas (NTAs), census tracts, and census blocks. Either get all
boundaries of a selected geography or a filtered subset.
}
\details{
For more information about the metadata included with boundaries,
see \link{borough_sf}, \link{puma_sf}, \link{cd_sf}, \link{nta_sf}, \link{tract_sf}, or \link{block_sf}.
For information about the census estimates returned, see
\link{borough_acs_data}, \link{puma_acs_data}, \link{nta_acs_data}, \link{tract_acs_data}, or
\link{block_census_data}.
}
\examples{
if (require(sf)) {

  # get sf boundaires
  all_nyc_boroughs <- nyc_boundaries(geography = "borough")

  greenpoint_williamsburg_ntas <- nyc_boundaries(
    geography = "nta",
    filter_by = "puma",
    region = "4001",
    resolution = "high"
    )

  queens_brooklyn_tracts <- nyc_boundaries(
    geography = "tract",
    filter_by = "borough",
    region = c("queens", "brooklyn"),
    add_acs_data = TRUE
  )

  # plot boundaries
  plot(st_geometry(all_nyc_boroughs))

  plot(st_geometry(greenpoint_williamsburg_ntas))

  plot(queens_brooklyn_tracts["pop_white_pct_est"])
}

}
